{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useCallback } from 'react';\nconst FaceDetection = ({\n  videoRef,\n  canvasRef,\n  onEvent\n}) => {\n  _s();\n  const faceDetectionRef = useRef(null);\n  const lastFaceDetectedRef = useRef(Date.now());\n  const lastLookingAwayRef = useRef(Date.now());\n  const noFaceTimerRef = useRef(null);\n  const lookingAwayTimerRef = useRef(null);\n\n  // Simple face detection fallback using basic computer vision principles\n  const detectFaces = useCallback((video, canvas) => {\n    if (!video || !canvas || video.videoWidth === 0 || video.videoHeight === 0) {\n      return [];\n    }\n    const ctx = canvas.getContext('2d');\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Draw video frame to canvas\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Get image data\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n\n    // Simple face detection using skin color detection and basic shape analysis\n    let skinPixels = 0;\n    let totalPixels = 0;\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    const faceRegionSize = Math.min(canvas.width, canvas.height) * 0.3;\n\n    // Check face region (center area of the video)\n    for (let y = centerY - faceRegionSize / 2; y < centerY + faceRegionSize / 2; y += 4) {\n      for (let x = centerX - faceRegionSize / 2; x < centerX + faceRegionSize / 2; x += 4) {\n        if (y >= 0 && y < canvas.height && x >= 0 && x < canvas.width) {\n          const index = (Math.floor(y) * canvas.width + Math.floor(x)) * 4;\n          const r = data[index];\n          const g = data[index + 1];\n          const b = data[index + 2];\n\n          // Simple skin color detection\n          if (r > 95 && g > 40 && b > 20 && Math.max(r, g, b) - Math.min(r, g, b) > 15 && Math.abs(r - g) > 15 && r > g && r > b) {\n            skinPixels++;\n          }\n          totalPixels++;\n        }\n      }\n    }\n    const skinRatio = skinPixels / totalPixels;\n\n    // Detect brightness changes that might indicate movement/looking away\n    let avgBrightness = 0;\n    let brightPixels = 0;\n    for (let i = 0; i < data.length; i += 16) {\n      // Sample every 4th pixel\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      const brightness = (r + g + b) / 3;\n      avgBrightness += brightness;\n      if (brightness > 100) brightPixels++;\n    }\n    avgBrightness /= data.length / 16;\n\n    // Face detection logic\n    const faces = [];\n    if (skinRatio > 0.1 && avgBrightness > 50) {\n      // Basic face detected\n      faces.push({\n        x: centerX - faceRegionSize / 4,\n        y: centerY - faceRegionSize / 4,\n        width: faceRegionSize / 2,\n        height: faceRegionSize / 2,\n        confidence: skinRatio\n      });\n\n      // Check if looking away (low skin ratio or uneven distribution)\n      if (skinRatio < 0.15 || brightPixels / (data.length / 16) < 0.3) {\n        return {\n          faces,\n          lookingAway: true\n        };\n      }\n    }\n\n    // Multiple faces detection (very basic - look for multiple bright regions)\n    if (skinRatio > 0.2) {\n      faces.push({\n        x: centerX + faceRegionSize / 4,\n        y: centerY - faceRegionSize / 4,\n        width: faceRegionSize / 4,\n        height: faceRegionSize / 4,\n        confidence: 0.6\n      });\n    }\n    return {\n      faces,\n      lookingAway: false\n    };\n  }, []);\n  const checkFaceDetection = useCallback(() => {\n    if (!videoRef.current || !canvasRef.current) return;\n    const result = detectFaces(videoRef.current, canvasRef.current);\n    const currentTime = Date.now();\n    if (result.faces && result.faces.length > 0) {\n      lastFaceDetectedRef.current = currentTime;\n\n      // Clear no face timer\n      if (noFaceTimerRef.current) {\n        clearTimeout(noFaceTimerRef.current);\n        noFaceTimerRef.current = null;\n      }\n\n      // Check for multiple faces\n      if (result.faces.length > 1) {\n        onEvent('Multiple faces detected - Suspicious activity', 'suspicious');\n      }\n\n      // Check if looking away\n      if (result.lookingAway) {\n        if (currentTime - lastLookingAwayRef.current > 5000) {\n          // 5 seconds\n          onEvent('Candidate looking away from camera for more than 5 seconds', 'warning');\n          lastLookingAwayRef.current = currentTime;\n        }\n      } else {\n        lastLookingAwayRef.current = currentTime;\n        // Clear looking away timer\n        if (lookingAwayTimerRef.current) {\n          clearTimeout(lookingAwayTimerRef.current);\n          lookingAwayTimerRef.current = null;\n        }\n      }\n    } else {\n      // No face detected\n      if (currentTime - lastFaceDetectedRef.current > 10000) {\n        // 10 seconds\n        if (!noFaceTimerRef.current) {\n          noFaceTimerRef.current = setTimeout(() => {\n            onEvent('No face detected for more than 10 seconds', 'warning');\n            noFaceTimerRef.current = null;\n          }, 1000);\n        }\n      }\n    }\n  }, [detectFaces, onEvent]);\n  useEffect(() => {\n    const interval = setInterval(checkFaceDetection, 1000); // Check every second\n\n    return () => {\n      clearInterval(interval);\n      if (noFaceTimerRef.current) {\n        clearTimeout(noFaceTimerRef.current);\n      }\n      if (lookingAwayTimerRef.current) {\n        clearTimeout(lookingAwayTimerRef.current);\n      }\n    };\n  }, [checkFaceDetection]);\n  useEffect(() => {\n    onEvent('Face detection monitoring started', 'info');\n    return () => {\n      onEvent('Face detection monitoring stopped', 'info');\n    };\n  }, [onEvent]);\n  return null; // This component doesn't render anything visible\n};\n_s(FaceDetection, \"0DlpZRnbT2N2tQS4tRkeQeaW4OM=\");\n_c = FaceDetection;\nexport default FaceDetection;\nvar _c;\n$RefreshReg$(_c, \"FaceDetection\");","map":{"version":3,"names":["useEffect","useRef","useCallback","FaceDetection","videoRef","canvasRef","onEvent","_s","faceDetectionRef","lastFaceDetectedRef","Date","now","lastLookingAwayRef","noFaceTimerRef","lookingAwayTimerRef","detectFaces","video","canvas","videoWidth","videoHeight","ctx","getContext","width","height","drawImage","imageData","getImageData","data","skinPixels","totalPixels","centerX","centerY","faceRegionSize","Math","min","y","x","index","floor","r","g","b","max","abs","skinRatio","avgBrightness","brightPixels","i","length","brightness","faces","push","confidence","lookingAway","checkFaceDetection","current","result","currentTime","clearTimeout","setTimeout","interval","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/nikhi/OneDrive/Desktop/Tutedude SDE Assignment/interview-proctoring-system/src/components/FaceDetection.js"],"sourcesContent":["import { useEffect, useRef, useCallback } from 'react';\r\n\r\nconst FaceDetection = ({ videoRef, canvasRef, onEvent }) => {\r\n  const faceDetectionRef = useRef(null);\r\n  const lastFaceDetectedRef = useRef(Date.now());\r\n  const lastLookingAwayRef = useRef(Date.now());\r\n  const noFaceTimerRef = useRef(null);\r\n  const lookingAwayTimerRef = useRef(null);\r\n\r\n  // Simple face detection fallback using basic computer vision principles\r\n  const detectFaces = useCallback((video, canvas) => {\r\n    if (!video || !canvas || video.videoWidth === 0 || video.videoHeight === 0) {\r\n      return [];\r\n    }\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    \r\n    // Draw video frame to canvas\r\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    \r\n    // Get image data\r\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    const data = imageData.data;\r\n    \r\n    // Simple face detection using skin color detection and basic shape analysis\r\n    let skinPixels = 0;\r\n    let totalPixels = 0;\r\n    const centerX = canvas.width / 2;\r\n    const centerY = canvas.height / 2;\r\n    const faceRegionSize = Math.min(canvas.width, canvas.height) * 0.3;\r\n    \r\n    // Check face region (center area of the video)\r\n    for (let y = centerY - faceRegionSize/2; y < centerY + faceRegionSize/2; y += 4) {\r\n      for (let x = centerX - faceRegionSize/2; x < centerX + faceRegionSize/2; x += 4) {\r\n        if (y >= 0 && y < canvas.height && x >= 0 && x < canvas.width) {\r\n          const index = (Math.floor(y) * canvas.width + Math.floor(x)) * 4;\r\n          const r = data[index];\r\n          const g = data[index + 1];\r\n          const b = data[index + 2];\r\n          \r\n          // Simple skin color detection\r\n          if (r > 95 && g > 40 && b > 20 && \r\n              Math.max(r, g, b) - Math.min(r, g, b) > 15 &&\r\n              Math.abs(r - g) > 15 && r > g && r > b) {\r\n            skinPixels++;\r\n          }\r\n          totalPixels++;\r\n        }\r\n      }\r\n    }\r\n    \r\n    const skinRatio = skinPixels / totalPixels;\r\n    \r\n    // Detect brightness changes that might indicate movement/looking away\r\n    let avgBrightness = 0;\r\n    let brightPixels = 0;\r\n    \r\n    for (let i = 0; i < data.length; i += 16) { // Sample every 4th pixel\r\n      const r = data[i];\r\n      const g = data[i + 1];\r\n      const b = data[i + 2];\r\n      const brightness = (r + g + b) / 3;\r\n      avgBrightness += brightness;\r\n      if (brightness > 100) brightPixels++;\r\n    }\r\n    avgBrightness /= (data.length / 16);\r\n    \r\n    // Face detection logic\r\n    const faces = [];\r\n    \r\n    if (skinRatio > 0.1 && avgBrightness > 50) {\r\n      // Basic face detected\r\n      faces.push({\r\n        x: centerX - faceRegionSize/4,\r\n        y: centerY - faceRegionSize/4,\r\n        width: faceRegionSize/2,\r\n        height: faceRegionSize/2,\r\n        confidence: skinRatio\r\n      });\r\n      \r\n      // Check if looking away (low skin ratio or uneven distribution)\r\n      if (skinRatio < 0.15 || brightPixels / (data.length / 16) < 0.3) {\r\n        return { faces, lookingAway: true };\r\n      }\r\n    }\r\n    \r\n    // Multiple faces detection (very basic - look for multiple bright regions)\r\n    if (skinRatio > 0.2) {\r\n      faces.push({\r\n        x: centerX + faceRegionSize/4,\r\n        y: centerY - faceRegionSize/4,\r\n        width: faceRegionSize/4,\r\n        height: faceRegionSize/4,\r\n        confidence: 0.6\r\n      });\r\n    }\r\n    \r\n    return { faces, lookingAway: false };\r\n  }, []);\r\n\r\n  const checkFaceDetection = useCallback(() => {\r\n    if (!videoRef.current || !canvasRef.current) return;\r\n\r\n    const result = detectFaces(videoRef.current, canvasRef.current);\r\n    const currentTime = Date.now();\r\n\r\n    if (result.faces && result.faces.length > 0) {\r\n      lastFaceDetectedRef.current = currentTime;\r\n      \r\n      // Clear no face timer\r\n      if (noFaceTimerRef.current) {\r\n        clearTimeout(noFaceTimerRef.current);\r\n        noFaceTimerRef.current = null;\r\n      }\r\n\r\n      // Check for multiple faces\r\n      if (result.faces.length > 1) {\r\n        onEvent('Multiple faces detected - Suspicious activity', 'suspicious');\r\n      }\r\n\r\n      // Check if looking away\r\n      if (result.lookingAway) {\r\n        if (currentTime - lastLookingAwayRef.current > 5000) { // 5 seconds\r\n          onEvent('Candidate looking away from camera for more than 5 seconds', 'warning');\r\n          lastLookingAwayRef.current = currentTime;\r\n        }\r\n      } else {\r\n        lastLookingAwayRef.current = currentTime;\r\n        // Clear looking away timer\r\n        if (lookingAwayTimerRef.current) {\r\n          clearTimeout(lookingAwayTimerRef.current);\r\n          lookingAwayTimerRef.current = null;\r\n        }\r\n      }\r\n    } else {\r\n      // No face detected\r\n      if (currentTime - lastFaceDetectedRef.current > 10000) { // 10 seconds\r\n        if (!noFaceTimerRef.current) {\r\n          noFaceTimerRef.current = setTimeout(() => {\r\n            onEvent('No face detected for more than 10 seconds', 'warning');\r\n            noFaceTimerRef.current = null;\r\n          }, 1000);\r\n        }\r\n      }\r\n    }\r\n  }, [detectFaces, onEvent]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(checkFaceDetection, 1000); // Check every second\r\n    \r\n    return () => {\r\n      clearInterval(interval);\r\n      if (noFaceTimerRef.current) {\r\n        clearTimeout(noFaceTimerRef.current);\r\n      }\r\n      if (lookingAwayTimerRef.current) {\r\n        clearTimeout(lookingAwayTimerRef.current);\r\n      }\r\n    };\r\n  }, [checkFaceDetection]);\r\n\r\n  useEffect(() => {\r\n    onEvent('Face detection monitoring started', 'info');\r\n    \r\n    return () => {\r\n      onEvent('Face detection monitoring stopped', 'info');\r\n    };\r\n  }, [onEvent]);\r\n\r\n  return null; // This component doesn't render anything visible\r\n};\r\n\r\nexport default FaceDetection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}