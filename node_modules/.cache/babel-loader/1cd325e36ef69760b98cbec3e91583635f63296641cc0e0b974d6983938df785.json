{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhi\\\\OneDrive\\\\Desktop\\\\Tutedude SDE Assignment\\\\interview-proctoring-system\\\\src\\\\components\\\\WebcamComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebcamComponent = ({\n  videoRef,\n  canvasRef,\n  isActive,\n  onEvent\n}) => {\n  _s();\n  const [stream, setStream] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const mediaRecorderRef = useRef(null);\n  useEffect(() => {\n    if (isActive) {\n      startWebcam();\n    } else {\n      stopWebcam();\n    }\n    return () => {\n      stopWebcam();\n    };\n  }, [isActive]);\n  const startWebcam = async () => {\n    try {\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: 640,\n          height: 480\n        },\n        audio: true\n      });\n      setStream(mediaStream);\n      if (videoRef.current) {\n        videoRef.current.srcObject = mediaStream;\n        videoRef.current.play();\n      }\n      onEvent('Webcam access granted and started', 'success');\n    } catch (error) {\n      console.error('Error accessing webcam:', error);\n      onEvent('Failed to access webcam: ' + error.message, 'error');\n    }\n  };\n  const stopWebcam = () => {\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      setStream(null);\n    }\n    if (videoRef.current) {\n      videoRef.current.srcObject = null;\n    }\n    if (isRecording) {\n      stopRecording();\n    }\n  };\n  const startRecording = () => {\n    if (!stream) {\n      onEvent('Cannot start recording: No webcam stream available', 'error');\n      return;\n    }\n    try {\n      const mediaRecorder = new MediaRecorder(stream, {\n        mimeType: 'video/webm;codecs=vp9'\n      });\n      mediaRecorderRef.current = mediaRecorder;\n      setRecordedChunks([]);\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          setRecordedChunks(prev => [...prev, event.data]);\n        }\n      };\n      mediaRecorder.onstop = () => {\n        setIsRecording(false);\n        onEvent('Recording stopped', 'info');\n      };\n      mediaRecorder.start();\n      setIsRecording(true);\n      onEvent('Recording started', 'success');\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      onEvent('Failed to start recording: ' + error.message, 'error');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n    }\n  };\n  const downloadRecording = () => {\n    if (recordedChunks.length === 0) {\n      onEvent('No recording available to download', 'warning');\n      return;\n    }\n    const blob = new Blob(recordedChunks, {\n      type: 'video/webm'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `interview-recording-${new Date().toISOString().slice(0, 19)}.webm`;\n    link.click();\n    URL.revokeObjectURL(url);\n    onEvent('Recording downloaded successfully', 'success');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"webcam-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Webcam Feed\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `status-indicator ${stream ? 'status-active' : 'status-inactive'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), stream ? 'Active' : 'Inactive']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"video-feed\",\n        autoPlay: true,\n        muted: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          display: 'none'\n        },\n        width: \"640\",\n        height: \"480\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${isRecording ? 'btn-danger' : 'btn-primary'}`,\n        onClick: isRecording ? stopRecording : startRecording,\n        disabled: !stream,\n        children: isRecording ? '⏹ Stop Recording' : '🔴 Start Recording'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: downloadRecording,\n        disabled: recordedChunks.length === 0,\n        children: \"\\uD83D\\uDCE5 Download Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-status\",\n        children: [isRecording && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red',\n            fontWeight: 'bold'\n          },\n          children: \"\\uD83D\\uDD34 Recording in progress...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), recordedChunks.length > 0 && !isRecording && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green',\n            fontWeight: 'bold'\n          },\n          children: \"\\u2705 Recording available for download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(WebcamComponent, \"V8N+Zahh4zhNwziOl5hB8Vjk0ow=\");\n_c = WebcamComponent;\nexport default WebcamComponent;\nvar _c;\n$RefreshReg$(_c, \"WebcamComponent\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","WebcamComponent","videoRef","canvasRef","isActive","onEvent","_s","stream","setStream","isRecording","setIsRecording","recordedChunks","setRecordedChunks","mediaRecorderRef","startWebcam","stopWebcam","mediaStream","navigator","mediaDevices","getUserMedia","video","width","height","audio","current","srcObject","play","error","console","message","getTracks","forEach","track","stop","stopRecording","startRecording","mediaRecorder","MediaRecorder","mimeType","ondataavailable","event","data","size","prev","onstop","start","downloadRecording","length","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","Date","toISOString","slice","click","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","playsInline","style","display","onClick","disabled","color","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/nikhi/OneDrive/Desktop/Tutedude SDE Assignment/interview-proctoring-system/src/components/WebcamComponent.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst WebcamComponent = ({ videoRef, canvasRef, isActive, onEvent }) => {\r\n  const [stream, setStream] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recordedChunks, setRecordedChunks] = useState([]);\r\n  const mediaRecorderRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isActive) {\r\n      startWebcam();\r\n    } else {\r\n      stopWebcam();\r\n    }\r\n\r\n    return () => {\r\n      stopWebcam();\r\n    };\r\n  }, [isActive]);\r\n\r\n  const startWebcam = async () => {\r\n    try {\r\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\r\n        video: { width: 640, height: 480 },\r\n        audio: true\r\n      });\r\n      \r\n      setStream(mediaStream);\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = mediaStream;\r\n        videoRef.current.play();\r\n      }\r\n      \r\n      onEvent('Webcam access granted and started', 'success');\r\n    } catch (error) {\r\n      console.error('Error accessing webcam:', error);\r\n      onEvent('Failed to access webcam: ' + error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const stopWebcam = () => {\r\n    if (stream) {\r\n      stream.getTracks().forEach(track => track.stop());\r\n      setStream(null);\r\n    }\r\n    \r\n    if (videoRef.current) {\r\n      videoRef.current.srcObject = null;\r\n    }\r\n    \r\n    if (isRecording) {\r\n      stopRecording();\r\n    }\r\n  };\r\n\r\n  const startRecording = () => {\r\n    if (!stream) {\r\n      onEvent('Cannot start recording: No webcam stream available', 'error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const mediaRecorder = new MediaRecorder(stream, {\r\n        mimeType: 'video/webm;codecs=vp9'\r\n      });\r\n\r\n      mediaRecorderRef.current = mediaRecorder;\r\n      setRecordedChunks([]);\r\n\r\n      mediaRecorder.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          setRecordedChunks(prev => [...prev, event.data]);\r\n        }\r\n      };\r\n\r\n      mediaRecorder.onstop = () => {\r\n        setIsRecording(false);\r\n        onEvent('Recording stopped', 'info');\r\n      };\r\n\r\n      mediaRecorder.start();\r\n      setIsRecording(true);\r\n      onEvent('Recording started', 'success');\r\n    } catch (error) {\r\n      console.error('Error starting recording:', error);\r\n      onEvent('Failed to start recording: ' + error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && isRecording) {\r\n      mediaRecorderRef.current.stop();\r\n    }\r\n  };\r\n\r\n  const downloadRecording = () => {\r\n    if (recordedChunks.length === 0) {\r\n      onEvent('No recording available to download', 'warning');\r\n      return;\r\n    }\r\n\r\n    const blob = new Blob(recordedChunks, { type: 'video/webm' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `interview-recording-${new Date().toISOString().slice(0, 19)}.webm`;\r\n    link.click();\r\n    URL.revokeObjectURL(url);\r\n    \r\n    onEvent('Recording downloaded successfully', 'success');\r\n  };\r\n\r\n  return (\r\n    <div className=\"webcam-container\">\r\n      <h3>\r\n        Webcam Feed \r\n        <span className={`status-indicator ${stream ? 'status-active' : 'status-inactive'}`}></span>\r\n        {stream ? 'Active' : 'Inactive'}\r\n      </h3>\r\n      \r\n      <div className=\"video-container\">\r\n        <video\r\n          ref={videoRef}\r\n          className=\"video-feed\"\r\n          autoPlay\r\n          muted\r\n          playsInline\r\n        />\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{ display: 'none' }}\r\n          width=\"640\"\r\n          height=\"480\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"video-controls\">\r\n        <button\r\n          className={`btn ${isRecording ? 'btn-danger' : 'btn-primary'}`}\r\n          onClick={isRecording ? stopRecording : startRecording}\r\n          disabled={!stream}\r\n        >\r\n          {isRecording ? '⏹ Stop Recording' : '🔴 Start Recording'}\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-secondary\"\r\n          onClick={downloadRecording}\r\n          disabled={recordedChunks.length === 0}\r\n        >\r\n          📥 Download Recording\r\n        </button>\r\n\r\n        <div className=\"recording-status\">\r\n          {isRecording && (\r\n            <span style={{ color: 'red', fontWeight: 'bold' }}>\r\n              🔴 Recording in progress...\r\n            </span>\r\n          )}\r\n          \r\n          {recordedChunks.length > 0 && !isRecording && (\r\n            <span style={{ color: 'green', fontWeight: 'bold' }}>\r\n              ✅ Recording available for download\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebcamComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}